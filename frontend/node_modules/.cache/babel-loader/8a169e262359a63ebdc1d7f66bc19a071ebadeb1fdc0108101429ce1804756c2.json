{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000';\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error; // Re-throw error to handle it in the calling code\n  }\n};\n\n// Add a new product\nexport const addProduct = async product => {\n  try {\n    const response = await axios.post(`${API_URL}/products`, product);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding product:', error);\n    throw error;\n  }\n};\n\n// Update a product\nexport const updateProduct = async (productId, product) => {\n  try {\n    const response = await axios.put(`${API_URL}/products`, product);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw error;\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`${API_URL}/products/${productId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw error;\n  }\n};\n\n// Fetch product stock levels for users\nexport const fetchProductStockLevels = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products/stock`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product stock levels:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchProducts","response","get","data","error","console","addProduct","product","post","updateProduct","productId","put","deleteProduct","delete","fetchProductStockLevels"],"sources":["C:/Users/LENOVO/Desktop/inventory/inventory/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000';\r\n\r\n// Fetch all products\r\nexport const fetchProducts = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        throw error; // Re-throw error to handle it in the calling code\r\n    }\r\n};\r\n\r\n// Add a new product\r\nexport const addProduct = async (product) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/products`, product);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Update a product\r\nexport const updateProduct = async (productId, product) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/products`, product);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Delete a product\r\nexport const deleteProduct = async (productId) => {\r\n    try {\r\n        const response = await axios.delete(`${API_URL}/products/${productId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error deleting product:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch product stock levels for users\r\nexport const fetchProductStockLevels = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products/stock`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching product stock levels:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,CAAC;IACvD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EACzC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAEQ,OAAO,CAAC;IACjE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEH,OAAO,KAAK;EACvD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,WAAW,EAAEQ,OAAO,CAAC;IAChE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOF,SAAS,IAAK;EAC9C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,aAAaW,SAAS,EAAE,CAAC;IACvE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,iBAAiB,CAAC;IAC7D,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}